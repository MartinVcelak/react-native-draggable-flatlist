{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNativeReanimated","_reactNativeGestureHandler","_propsContext","_jsxFileName","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","AnimatedValueContext","React","createContext","undefined","AnimatedValueProvider","_ref","children","value","useSetupAnimatedValues","createElement","Provider","__self","__source","fileName","lineNumber","columnNumber","useAnimatedValues","useContext","Error","props","useProps","DEFAULT_VAL","useSharedValue","containerSize","scrollViewSize","panGestureState","GestureState","UNDETERMINED","touchTranslate","isTouchActiveNative","hasMoved","disabled","horizontalAnim","horizontal","activeIndexAnim","spacerIndexAnim","activeCellSize","activeCellOffset","scrollOffset","scrollInit","viewableIndexMin","viewableIndexMax","outerScrollOffset","outerScrollInit","useAnimatedReaction","_f","_closure","asString","__workletHash","__location","cur","prev","placeholderOffset","isDraggingCell","useDerivedValue","autoScrollDistance","innerScrollDiff","outerScrollDiff","scrollDiff","touchPositionDiff","extraTranslate","touchPositionDiffConstrained","containerMinusActiveCell","offsetRelativeToScrollTop","constrained","Math","min","max","maxTranslateNegative","maxTranslatePositive","constrainedBase","dragItemOverflow","hoverAnim","hoverOffset","isHovering","resetTouchedCell","useCallback","useMemo","useEffect","onAnimValInit"],"sources":["animatedValueContext.tsx"],"sourcesContent":["import React, { useMemo, useEffect, useCallback, useContext } from \"react\";\nimport {\n  useAnimatedReaction,\n  useDerivedValue,\n  useSharedValue,\n} from \"react-native-reanimated\";\nimport { State as GestureState } from \"react-native-gesture-handler\";\nimport { useProps } from \"./propsContext\";\n\nconst AnimatedValueContext = React.createContext<\n  ReturnType<typeof useSetupAnimatedValues> | undefined\n>(undefined);\n\nexport default function AnimatedValueProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const value = useSetupAnimatedValues();\n  return (\n    <AnimatedValueContext.Provider value={value}>\n      {children}\n    </AnimatedValueContext.Provider>\n  );\n}\n\nexport function useAnimatedValues() {\n  const value = useContext(AnimatedValueContext);\n  if (!value) {\n    throw new Error(\n      \"useAnimatedValues must be called from within AnimatedValueProvider!\"\n    );\n  }\n  return value;\n}\n\nfunction useSetupAnimatedValues<T>() {\n  const props = useProps<T>();\n\n  const DEFAULT_VAL = useSharedValue(0);\n\n  const containerSize = useSharedValue(0);\n  const scrollViewSize = useSharedValue(0);\n\n  const panGestureState = useSharedValue<GestureState>(\n    GestureState.UNDETERMINED\n  );\n  const touchTranslate = useSharedValue(0);\n\n  const isTouchActiveNative = useSharedValue(false);\n\n  const hasMoved = useSharedValue(0);\n  const disabled = useSharedValue(false);\n\n  const horizontalAnim = useSharedValue(!!props.horizontal);\n\n  const activeIndexAnim = useSharedValue(-1); // Index of hovering cell\n  const spacerIndexAnim = useSharedValue(-1); // Index of hovered-over cell\n\n  const activeCellSize = useSharedValue(0); // Height or width of acctive cell\n  const activeCellOffset = useSharedValue(0); // Distance between active cell and edge of container\n\n  const scrollOffset = useSharedValue(0);\n  const scrollInit = useSharedValue(0);\n\n  const viewableIndexMin = useSharedValue(0);\n  const viewableIndexMax = useSharedValue(0);\n\n  // If list is nested there may be an outer scrollview\n  const outerScrollOffset = props.outerScrollOffset || DEFAULT_VAL;\n  const outerScrollInit = useSharedValue(0);\n\n  useAnimatedReaction(\n    () => {\n      return activeIndexAnim.value;\n    },\n    (cur, prev) => {\n      if (cur !== prev && cur >= 0) {\n        scrollInit.value = scrollOffset.value;\n        outerScrollInit.value = outerScrollOffset.value;\n      }\n    },\n    [outerScrollOffset]\n  );\n\n  const placeholderOffset = useSharedValue(0);\n\n  const isDraggingCell = useDerivedValue(() => {\n    return isTouchActiveNative.value && activeIndexAnim.value >= 0;\n  }, []);\n\n  const autoScrollDistance = useDerivedValue(() => {\n    if (!isDraggingCell.value) return 0;\n    const innerScrollDiff = scrollOffset.value - scrollInit.value;\n    // If list is nested there may be an outer scroll diff\n    const outerScrollDiff = outerScrollOffset.value - outerScrollInit.value;\n    const scrollDiff = innerScrollDiff + outerScrollDiff;\n    return scrollDiff;\n  }, []);\n\n  const touchPositionDiff = useDerivedValue(() => {\n    const extraTranslate = isTouchActiveNative.value\n      ? autoScrollDistance.value\n      : 0;\n    return touchTranslate.value + extraTranslate;\n  }, []);\n\n  const touchPositionDiffConstrained = useDerivedValue(() => {\n    const containerMinusActiveCell =\n      containerSize.value - activeCellSize.value + scrollOffset.value;\n\n    const offsetRelativeToScrollTop =\n      touchPositionDiff.value + activeCellOffset.value;\n    const constrained = Math.min(\n      containerMinusActiveCell,\n      Math.max(scrollOffset.value, offsetRelativeToScrollTop)\n    );\n\n    const maxTranslateNegative = -activeCellOffset.value;\n    const maxTranslatePositive =\n      scrollViewSize.value - (activeCellOffset.value + activeCellSize.value);\n\n    // Only constrain the touch position while the finger is on the screen. This allows the active cell\n    // to snap above/below the fold once let go, if the drag ends at the top/bottom of the screen.\n    const constrainedBase = isTouchActiveNative.value\n      ? constrained - activeCellOffset.value\n      : touchPositionDiff.value;\n\n    // Make sure item is constrained to the boundaries of the scrollview\n    return Math.min(\n      Math.max(constrainedBase, maxTranslateNegative),\n      maxTranslatePositive\n    );\n  }, []);\n\n  const dragItemOverflow = props.dragItemOverflow;\n  const hoverAnim = useDerivedValue(() => {\n    if (activeIndexAnim.value < 0) return 0;\n    return dragItemOverflow\n      ? touchPositionDiff.value\n      : touchPositionDiffConstrained.value;\n  }, []);\n\n  const hoverOffset = useDerivedValue(() => {\n    return hoverAnim.value + activeCellOffset.value;\n  }, [hoverAnim, activeCellOffset]);\n\n  useDerivedValue(() => {\n    // Reset spacer index when we stop hovering\n    const isHovering = activeIndexAnim.value >= 0;\n    if (!isHovering && spacerIndexAnim.value >= 0) {\n      spacerIndexAnim.value = -1;\n    }\n  }, []);\n\n  // Note: this could use a refactor as it combines touch state + cell animation\n  const resetTouchedCell = useCallback(() => {\n    activeCellOffset.value = 0;\n    hasMoved.value = 0;\n  }, []);\n\n  const value = useMemo(\n    () => ({\n      activeCellOffset,\n      activeCellSize,\n      activeIndexAnim,\n      containerSize,\n      disabled,\n      horizontalAnim,\n      hoverAnim,\n      hoverOffset,\n      isDraggingCell,\n      isTouchActiveNative,\n      panGestureState,\n      placeholderOffset,\n      resetTouchedCell,\n      scrollOffset,\n      scrollViewSize,\n      spacerIndexAnim,\n      touchPositionDiff,\n      touchTranslate,\n      autoScrollDistance,\n      viewableIndexMin,\n      viewableIndexMax,\n    }),\n    [\n      activeCellOffset,\n      activeCellSize,\n      activeIndexAnim,\n      containerSize,\n      disabled,\n      horizontalAnim,\n      hoverAnim,\n      hoverOffset,\n      isDraggingCell,\n      isTouchActiveNative,\n      panGestureState,\n      placeholderOffset,\n      resetTouchedCell,\n      scrollOffset,\n      scrollViewSize,\n      spacerIndexAnim,\n      touchPositionDiff,\n      touchTranslate,\n      autoScrollDistance,\n      viewableIndexMin,\n      viewableIndexMax,\n    ]\n  );\n\n  useEffect(() => {\n    props.onAnimValInit?.(value);\n  }, [value]);\n\n  return value;\n}\n"],"mappings":"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","ignoreList":[]}