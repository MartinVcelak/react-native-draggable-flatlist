{"version":3,"names":["_reactNativeReanimated","require","_animatedValueContext","_draggableFlatListContext","_refContext","useCellTranslate","_ref","cellIndex","cellSize","cellOffset","_useAnimatedValues","useAnimatedValues","activeIndexAnim","activeCellSize","hoverOffset","spacerIndexAnim","placeholderOffset","hoverAnim","viewableIndexMin","viewableIndexMax","_useDraggableFlatList","useDraggableFlatListContext","activeKey","_useRefs","useRefs","animationConfigRef","translate","useDerivedValue","_f","isActiveCell","value","isOutsideViewableRange","isBeforeActive","isAfterActive","hoverPlusActiveSize","offsetPlusHalfSize","offsetPlusSize","result","newPlaceholderOffset","shouldTranslate","translationAmt","withSpring","_closure","asString","__workletHash","__location"],"sources":["useCellTranslate.tsx"],"sourcesContent":["import Animated, { useDerivedValue, withSpring } from \"react-native-reanimated\";\nimport { useAnimatedValues } from \"../context/animatedValueContext\";\nimport { useDraggableFlatListContext } from \"../context/draggableFlatListContext\";\nimport { useRefs } from \"../context/refContext\";\n\ntype Params = {\n  cellIndex: number;\n  cellSize: Animated.SharedValue<number>;\n  cellOffset: Animated.SharedValue<number>;\n};\n\nexport function useCellTranslate({ cellIndex, cellSize, cellOffset }: Params) {\n  const {\n    activeIndexAnim,\n    activeCellSize,\n    hoverOffset,\n    spacerIndexAnim,\n    placeholderOffset,\n    hoverAnim,\n    viewableIndexMin,\n    viewableIndexMax,\n  } = useAnimatedValues();\n\n  const { activeKey } = useDraggableFlatListContext();\n\n  const { animationConfigRef } = useRefs();\n\n  const translate = useDerivedValue(() => {\n    const isActiveCell = cellIndex === activeIndexAnim.value;\n    const isOutsideViewableRange =\n      !isActiveCell &&\n      (cellIndex < viewableIndexMin.value ||\n        cellIndex > viewableIndexMax.value);\n    if (!activeKey || activeIndexAnim.value < 0 || isOutsideViewableRange) {\n      return 0;\n    }\n\n    // Determining spacer index is hard to visualize. See diagram: https://i.imgur.com/jRPf5t3.jpg\n    const isBeforeActive = cellIndex < activeIndexAnim.value;\n    const isAfterActive = cellIndex > activeIndexAnim.value;\n\n    const hoverPlusActiveSize = hoverOffset.value + activeCellSize.value;\n    const offsetPlusHalfSize = cellOffset.value + cellSize.value / 2;\n    const offsetPlusSize = cellOffset.value + cellSize.value;\n    let result = -1;\n\n    if (isAfterActive) {\n      if (\n        hoverPlusActiveSize >= cellOffset.value &&\n        hoverPlusActiveSize < offsetPlusHalfSize\n      ) {\n        // bottom edge of active cell overlaps top half of current cell\n        result = cellIndex - 1;\n      } else if (\n        hoverPlusActiveSize >= offsetPlusHalfSize &&\n        hoverPlusActiveSize < offsetPlusSize\n      ) {\n        // bottom edge of active cell overlaps bottom half of current cell\n        result = cellIndex;\n      }\n    } else if (isBeforeActive) {\n      if (\n        hoverOffset.value < offsetPlusSize &&\n        hoverOffset.value >= offsetPlusHalfSize\n      ) {\n        // top edge of active cell overlaps bottom half of current cell\n        result = cellIndex + 1;\n      } else if (\n        hoverOffset.value >= cellOffset.value &&\n        hoverOffset.value < offsetPlusHalfSize\n      ) {\n        // top edge of active cell overlaps top half of current cell\n        result = cellIndex;\n      }\n    }\n\n    if (result !== -1 && result !== spacerIndexAnim.value) {\n      spacerIndexAnim.value = result;\n    }\n\n    if (spacerIndexAnim.value === cellIndex) {\n      const newPlaceholderOffset = isAfterActive\n        ? cellSize.value + (cellOffset.value - activeCellSize.value)\n        : cellOffset.value;\n      placeholderOffset.value = newPlaceholderOffset;\n    }\n\n    // Active cell follows touch\n    if (isActiveCell) {\n      return hoverAnim.value;\n    }\n\n    // Translate cell down if it is before active index and active cell has passed it.\n    // Translate cell up if it is after the active index and active cell has passed it.\n\n    const shouldTranslate = isAfterActive\n      ? cellIndex <= spacerIndexAnim.value\n      : cellIndex >= spacerIndexAnim.value;\n\n    const translationAmt = shouldTranslate\n      ? activeCellSize.value * (isAfterActive ? -1 : 1)\n      : 0;\n\n    return withSpring(translationAmt, animationConfigRef.value);\n  }, [activeKey, cellIndex]);\n\n  return translate;\n}\n"],"mappings":"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","ignoreList":[]}