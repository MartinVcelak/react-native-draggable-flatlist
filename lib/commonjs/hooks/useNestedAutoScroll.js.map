{"version":3,"names":["_reactNativeReanimated","require","_nestableScrollContainerContext","_constants","useNestedAutoScroll","params","_useSafeNestableScrol","useSafeNestableScrollContainerContext","outerScrollOffset","containerSize","scrollableRef","scrollViewSize","DUMMY_VAL","useSharedValue","_params$hoverOffset","hoverOffset","_params$activeCellSiz","activeCellSize","_params$autoscrollSpe","autoscrollSpeed","_params$autoscrollThr","autoscrollThreshold","_params$isDraggingCel","isDraggingCell","_params$isTouchActive","isTouchActiveNative","hoverScreenOffset","useDerivedValue","_f","value","_closure","asString","__workletHash","__location","isScrolledUp","SCROLL_POSITION_TOLERANCE","isScrolledDown","distToTopEdge","Math","max","distToBottomEdge","dist","isAtTopEdge","isAtBottomEdge","scrollTarget","useAnimatedReaction","cur","prev","scrollToInternal","y","_scrollableRef$curren","current","scrollTo","animated","isAtEdge","topDisabled","bottomDisabled","isEdgeDisabled","scrollTargetDiff","abs","scrollInProgress","shouldScroll","distFromEdge","speedPct","offset","targetOffset","runOnJS"],"sources":["useNestedAutoScroll.tsx"],"sourcesContent":["import Animated, {\n  runOnJS,\n  useAnimatedReaction,\n  useDerivedValue,\n  useSharedValue,\n} from \"react-native-reanimated\";\nimport { State as GestureState } from \"react-native-gesture-handler\";\nimport { useSafeNestableScrollContainerContext } from \"../context/nestableScrollContainerContext\";\nimport { SCROLL_POSITION_TOLERANCE } from \"../constants\";\n\n// This is mostly copied over from the main react-native-draggable-flatlist\n// useAutoScroll hook with a few notable exceptions:\n// - Since animated values are now coming in via a callback,\n//   we won't guarantee they exist (and default them if not).\n// - Outer scrollable is a ScrollView, not a FlatList\n// TODO: see if we can combine into a single shared `useAutoScroll()` hook\n\nexport function useNestedAutoScroll(params: {\n  activeCellSize?: Animated.SharedValue<number>;\n  autoscrollSpeed?: number;\n  autoscrollThreshold?: number;\n  hoverOffset?: Animated.SharedValue<number>;\n  isDraggingCell?: Animated.SharedValue<number>;\n  isTouchActiveNative?: Animated.SharedValue<number>;\n  panGestureState?: Animated.SharedValue<GestureState | number>;\n}) {\n  const {\n    outerScrollOffset,\n    containerSize,\n    scrollableRef,\n    scrollViewSize,\n  } = useSafeNestableScrollContainerContext();\n\n  const DUMMY_VAL = useSharedValue(0);\n\n  const {\n    hoverOffset = DUMMY_VAL,\n    activeCellSize = DUMMY_VAL,\n    autoscrollSpeed = 100,\n    autoscrollThreshold = 30,\n    isDraggingCell = DUMMY_VAL,\n    isTouchActiveNative = DUMMY_VAL,\n  } = params;\n\n  const hoverScreenOffset = useDerivedValue(() => {\n    return hoverOffset.value - outerScrollOffset.value;\n  }, []);\n\n  const isScrolledUp = useDerivedValue(() => {\n    return outerScrollOffset.value - SCROLL_POSITION_TOLERANCE <= 0;\n  }, []);\n\n  const isScrolledDown = useDerivedValue(() => {\n    return (\n      outerScrollOffset.value + containerSize.value + SCROLL_POSITION_TOLERANCE >=\n      scrollViewSize.value\n    );\n  }, []);\n\n  const distToTopEdge = useDerivedValue(() => {\n    return Math.max(0, hoverScreenOffset.value);\n  }, [hoverScreenOffset]);\n\n  const distToBottomEdge = useDerivedValue(() => {\n    const dist = containerSize.value - (hoverScreenOffset.value + activeCellSize.value)\n    return Math.max(0, dist);\n  }, [hoverScreenOffset, activeCellSize, containerSize]);\n\n  const isAtTopEdge = useDerivedValue(() => {\n    return distToTopEdge.value <= autoscrollThreshold;\n  }, []);\n\n  const isAtBottomEdge = useDerivedValue(() => {\n    return distToBottomEdge.value <= autoscrollThreshold;\n  });\n\n  const scrollTarget = useSharedValue(0);\n\n  useAnimatedReaction(\n    () => {\n      return isDraggingCell.value;\n    },\n    (cur, prev) => {\n      if (cur && !prev) {\n        scrollTarget.value = outerScrollOffset.value;\n      }\n    },\n    [activeCellSize]\n  );\n\n  function scrollToInternal(y: number) {\n    scrollableRef.current?.scrollTo({ y, animated: true });\n  }\n\n  useDerivedValue(() => {\n    const isAtEdge = isAtTopEdge.value || isAtBottomEdge.value;\n    const topDisabled = isAtTopEdge.value && isScrolledUp.value;\n    const bottomDisabled = isAtBottomEdge.value && isScrolledDown.value;\n    const isEdgeDisabled = topDisabled || bottomDisabled;\n\n    const scrollTargetDiff = Math.abs(scrollTarget.value - outerScrollOffset.value);\n    const scrollInProgress = scrollTargetDiff > SCROLL_POSITION_TOLERANCE;\n\n    const shouldScroll =\n      isAtEdge &&\n      !isEdgeDisabled &&\n      isDraggingCell.value &&\n      isTouchActiveNative.value &&\n      !scrollInProgress;\n\n    const distFromEdge = isAtTopEdge.value\n      ? distToTopEdge.value\n      : distToBottomEdge.value;\n    const speedPct = 1 - distFromEdge / autoscrollThreshold;\n    const offset = speedPct * autoscrollSpeed;\n    const targetOffset = isAtTopEdge.value\n      ? Math.max(0, outerScrollOffset.value - offset)\n      : outerScrollOffset.value + offset;\n    if (shouldScroll) {\n      scrollTarget.value = targetOffset;\n      // Reanimated scrollTo is crashing on android. use 'regular' scrollTo until figured out.\n      // scrollTo(scrollViewRef, 0, scrollTarget.value, true)\n      runOnJS(scrollToInternal)(targetOffset);\n    }\n  }, [autoscrollSpeed, autoscrollThreshold, isDraggingCell]);\n\n  return null;\n}\n"],"mappings":"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","ignoreList":[]}