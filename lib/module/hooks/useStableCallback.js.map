{"version":3,"names":["useRef","useCallback","useStableCallback","cb","cbRef","current","identityRetainingCb","args"],"sources":["useStableCallback.ts"],"sourcesContent":["import { useRef, useCallback } from \"react\";\n\n// Utility hook that returns a function that never has stale dependencies, but\n// without changing identity, as a useCallback with dep array would.\n// Useful for functions that depend on external state, but\n// should not trigger effects when that external state changes.\n\nexport function useStableCallback<\n  T extends (arg1?: any, arg2?: any, arg3?: any) => any\n>(cb: T) {\n  const cbRef = useRef(cb);\n  cbRef.current = cb;\n  const identityRetainingCb = useCallback(\n    (...args: Parameters<T>) => cbRef.current(...args),\n    []\n  );\n  return identityRetainingCb as T;\n}\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,WAAW,QAAQ,OAAO;;AAE3C;AACA;AACA;AACA;;AAEA,OAAO,SAASC,iBAAiBA,CAE/BC,EAAK,EAAE;EACP,MAAMC,KAAK,GAAGJ,MAAM,CAACG,EAAE,CAAC;EACxBC,KAAK,CAACC,OAAO,GAAGF,EAAE;EAClB,MAAMG,mBAAmB,GAAGL,WAAW,CACrC,CAAC,GAAGM,IAAmB,KAAKH,KAAK,CAACC,OAAO,CAAC,GAAGE,IAAI,CAAC,EAClD,EACF,CAAC;EACD,OAAOD,mBAAmB;AAC5B","ignoreList":[]}