{"version":3,"names":["runOnJS","useAnimatedReaction","useDerivedValue","useSharedValue","DEFAULT_PROPS","SCROLL_POSITION_TOLERANCE","useProps","useAnimatedValues","useRefs","useAutoScroll","flatlistRef","autoscrollThreshold","autoscrollSpeed","scrollOffset","scrollViewSize","containerSize","activeCellSize","hoverOffset","activeIndexAnim","hoverScreenOffset","value","isScrolledUp","isScrolledDown","distToTopEdge","Math","max","distToBottomEdge","hoverPlusActiveCell","isAtTopEdge","isAtBottomEdge","scrollTarget","dragIsActive","cur","prev","shouldAutoScroll","scrollTargetDiff","abs","hasScrolledToTarget","isAtEdge","topDisabled","bottomDisabled","isEdgeDisabled","cellIsActive","scrollToInternal","offset","_flatlistRef$current","current","scrollToOffset","animated","distFromEdge","speedPct","targetOffset","min"],"sources":["useAutoScroll.tsx"],"sourcesContent":["import {\n  runOnJS,\n  useAnimatedReaction,\n  useDerivedValue,\n  useSharedValue,\n} from \"react-native-reanimated\";\nimport { DEFAULT_PROPS, SCROLL_POSITION_TOLERANCE } from \"../constants\";\nimport { useProps } from \"../context/propsContext\";\nimport { useAnimatedValues } from \"../context/animatedValueContext\";\nimport { useRefs } from \"../context/refContext\";\n\nexport function useAutoScroll() {\n  const { flatlistRef } = useRefs();\n\n  const {\n    autoscrollThreshold = DEFAULT_PROPS.autoscrollThreshold,\n    autoscrollSpeed = DEFAULT_PROPS.autoscrollSpeed,\n  } = useProps();\n\n  const {\n    scrollOffset,\n    scrollViewSize,\n    containerSize,\n    activeCellSize,\n    hoverOffset,\n    activeIndexAnim,\n  } = useAnimatedValues();\n\n  const hoverScreenOffset = useDerivedValue(() => {\n    return hoverOffset.value - scrollOffset.value;\n  }, []);\n\n  const isScrolledUp = useDerivedValue(() => {\n    return scrollOffset.value - SCROLL_POSITION_TOLERANCE <= 0;\n  }, []);\n\n  const isScrolledDown = useDerivedValue(() => {\n    return (\n      scrollOffset.value + containerSize.value + SCROLL_POSITION_TOLERANCE >=\n      scrollViewSize.value\n    );\n  }, []);\n\n  const distToTopEdge = useDerivedValue(() => {\n    return Math.max(0, hoverScreenOffset.value);\n  }, []);\n\n  const distToBottomEdge = useDerivedValue(() => {\n    const hoverPlusActiveCell = hoverScreenOffset.value + activeCellSize.value;\n    return Math.max(0, containerSize.value - hoverPlusActiveCell);\n  }, []);\n\n  const isAtTopEdge = useDerivedValue(() => {\n    return distToTopEdge.value <= autoscrollThreshold;\n  });\n\n  const isAtBottomEdge = useDerivedValue(() => {\n    return distToBottomEdge.value <= autoscrollThreshold;\n  }, []);\n\n  const scrollTarget = useSharedValue(0);\n  const dragIsActive = useDerivedValue(() => {\n    return activeIndexAnim.value >= 0;\n  }, []);\n\n  useAnimatedReaction(\n    () => {\n      return dragIsActive.value;\n    },\n    (cur, prev) => {\n      if (cur && !prev) {\n        scrollTarget.value = scrollOffset.value;\n      }\n    }\n  );\n\n  const shouldAutoScroll = useDerivedValue(() => {\n    const scrollTargetDiff = Math.abs(scrollTarget.value - scrollOffset.value);\n    const hasScrolledToTarget = scrollTargetDiff < SCROLL_POSITION_TOLERANCE;\n\n    const isAtEdge = isAtTopEdge.value || isAtBottomEdge.value;\n    const topDisabled = isAtTopEdge.value && isScrolledUp.value;\n    const bottomDisabled = isAtBottomEdge.value && isScrolledDown.value;\n    const isEdgeDisabled = topDisabled || bottomDisabled;\n\n    const cellIsActive = activeIndexAnim.value >= 0;\n\n    return hasScrolledToTarget && isAtEdge && !isEdgeDisabled && cellIsActive;\n  }, []);\n\n  function scrollToInternal(offset: number) {\n    if (flatlistRef && \"current\" in flatlistRef) {\n      flatlistRef.current?.scrollToOffset({ offset, animated: true });\n    }\n  }\n\n  useDerivedValue(() => {\n    if (!shouldAutoScroll.value) return;\n\n    const distFromEdge = isAtTopEdge.value\n      ? distToTopEdge.value\n      : distToBottomEdge.value;\n    const speedPct = 1 - distFromEdge / autoscrollThreshold!;\n    const offset = speedPct * autoscrollSpeed;\n    const targetOffset = isAtTopEdge.value\n      ? Math.max(0, scrollOffset.value - offset)\n      : Math.min(\n          scrollOffset.value + offset,\n          scrollViewSize.value - containerSize.value\n        );\n\n    scrollTarget.value = targetOffset;\n    // Reanimated scrollTo is crashing on android. use 'regular' scrollTo until figured out.\n    // scrollTo(scrollViewRef, targetX, targetY, true);\n    runOnJS(scrollToInternal)(targetOffset);\n  }, []);\n\n  return null;\n}\n"],"mappings":"AAAA,SACEA,OAAO,EACPC,mBAAmB,EACnBC,eAAe,EACfC,cAAc,QACT,yBAAyB;AAChC,SAASC,aAAa,EAAEC,yBAAyB,QAAQ,cAAc;AACvE,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,iBAAiB,QAAQ,iCAAiC;AACnE,SAASC,OAAO,QAAQ,uBAAuB;AAE/C,OAAO,SAASC,aAAaA,CAAA,EAAG;EAC9B,MAAM;IAAEC;EAAY,CAAC,GAAGF,OAAO,CAAC,CAAC;EAEjC,MAAM;IACJG,mBAAmB,GAAGP,aAAa,CAACO,mBAAmB;IACvDC,eAAe,GAAGR,aAAa,CAACQ;EAClC,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAEd,MAAM;IACJO,YAAY;IACZC,cAAc;IACdC,aAAa;IACbC,cAAc;IACdC,WAAW;IACXC;EACF,CAAC,GAAGX,iBAAiB,CAAC,CAAC;EAEvB,MAAMY,iBAAiB,GAAGjB,eAAe,CAAC,MAAM;IAC9C,OAAOe,WAAW,CAACG,KAAK,GAAGP,YAAY,CAACO,KAAK;EAC/C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAGnB,eAAe,CAAC,MAAM;IACzC,OAAOW,YAAY,CAACO,KAAK,GAAGf,yBAAyB,IAAI,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,cAAc,GAAGpB,eAAe,CAAC,MAAM;IAC3C,OACEW,YAAY,CAACO,KAAK,GAAGL,aAAa,CAACK,KAAK,GAAGf,yBAAyB,IACpES,cAAc,CAACM,KAAK;EAExB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,aAAa,GAAGrB,eAAe,CAAC,MAAM;IAC1C,OAAOsB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEN,iBAAiB,CAACC,KAAK,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,gBAAgB,GAAGxB,eAAe,CAAC,MAAM;IAC7C,MAAMyB,mBAAmB,GAAGR,iBAAiB,CAACC,KAAK,GAAGJ,cAAc,CAACI,KAAK;IAC1E,OAAOI,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEV,aAAa,CAACK,KAAK,GAAGO,mBAAmB,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAG1B,eAAe,CAAC,MAAM;IACxC,OAAOqB,aAAa,CAACH,KAAK,IAAIT,mBAAmB;EACnD,CAAC,CAAC;EAEF,MAAMkB,cAAc,GAAG3B,eAAe,CAAC,MAAM;IAC3C,OAAOwB,gBAAgB,CAACN,KAAK,IAAIT,mBAAmB;EACtD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMmB,YAAY,GAAG3B,cAAc,CAAC,CAAC,CAAC;EACtC,MAAM4B,YAAY,GAAG7B,eAAe,CAAC,MAAM;IACzC,OAAOgB,eAAe,CAACE,KAAK,IAAI,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAENnB,mBAAmB,CACjB,MAAM;IACJ,OAAO8B,YAAY,CAACX,KAAK;EAC3B,CAAC,EACD,CAACY,GAAG,EAAEC,IAAI,KAAK;IACb,IAAID,GAAG,IAAI,CAACC,IAAI,EAAE;MAChBH,YAAY,CAACV,KAAK,GAAGP,YAAY,CAACO,KAAK;IACzC;EACF,CACF,CAAC;EAED,MAAMc,gBAAgB,GAAGhC,eAAe,CAAC,MAAM;IAC7C,MAAMiC,gBAAgB,GAAGX,IAAI,CAACY,GAAG,CAACN,YAAY,CAACV,KAAK,GAAGP,YAAY,CAACO,KAAK,CAAC;IAC1E,MAAMiB,mBAAmB,GAAGF,gBAAgB,GAAG9B,yBAAyB;IAExE,MAAMiC,QAAQ,GAAGV,WAAW,CAACR,KAAK,IAAIS,cAAc,CAACT,KAAK;IAC1D,MAAMmB,WAAW,GAAGX,WAAW,CAACR,KAAK,IAAIC,YAAY,CAACD,KAAK;IAC3D,MAAMoB,cAAc,GAAGX,cAAc,CAACT,KAAK,IAAIE,cAAc,CAACF,KAAK;IACnE,MAAMqB,cAAc,GAAGF,WAAW,IAAIC,cAAc;IAEpD,MAAME,YAAY,GAAGxB,eAAe,CAACE,KAAK,IAAI,CAAC;IAE/C,OAAOiB,mBAAmB,IAAIC,QAAQ,IAAI,CAACG,cAAc,IAAIC,YAAY;EAC3E,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,gBAAgBA,CAACC,MAAc,EAAE;IACxC,IAAIlC,WAAW,IAAI,SAAS,IAAIA,WAAW,EAAE;MAAA,IAAAmC,oBAAA;MAC3C,CAAAA,oBAAA,GAAAnC,WAAW,CAACoC,OAAO,cAAAD,oBAAA,uBAAnBA,oBAAA,CAAqBE,cAAc,CAAC;QAAEH,MAAM;QAAEI,QAAQ,EAAE;MAAK,CAAC,CAAC;IACjE;EACF;EAEA9C,eAAe,CAAC,MAAM;IACpB,IAAI,CAACgC,gBAAgB,CAACd,KAAK,EAAE;IAE7B,MAAM6B,YAAY,GAAGrB,WAAW,CAACR,KAAK,GAClCG,aAAa,CAACH,KAAK,GACnBM,gBAAgB,CAACN,KAAK;IAC1B,MAAM8B,QAAQ,GAAG,CAAC,GAAGD,YAAY,GAAGtC,mBAAoB;IACxD,MAAMiC,MAAM,GAAGM,QAAQ,GAAGtC,eAAe;IACzC,MAAMuC,YAAY,GAAGvB,WAAW,CAACR,KAAK,GAClCI,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEZ,YAAY,CAACO,KAAK,GAAGwB,MAAM,CAAC,GACxCpB,IAAI,CAAC4B,GAAG,CACNvC,YAAY,CAACO,KAAK,GAAGwB,MAAM,EAC3B9B,cAAc,CAACM,KAAK,GAAGL,aAAa,CAACK,KACvC,CAAC;IAELU,YAAY,CAACV,KAAK,GAAG+B,YAAY;IACjC;IACA;IACAnD,OAAO,CAAC2C,gBAAgB,CAAC,CAACQ,YAAY,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAI;AACb","ignoreList":[]}