{"version":3,"names":["React","useCallback","useEffect","useLayoutEffect","useMemo","useRef","useState","FlatList","Gesture","GestureDetector","Animated","runOnJS","useAnimatedReaction","useAnimatedScrollHandler","useSharedValue","withSpring","CellRendererComponent","DEFAULT_PROPS","PlaceholderItem","RowItem","PropsProvider","AnimatedValueProvider","useAnimatedValues","RefProvider","useRefs","DraggableFlatListProvider","useAutoScroll","useStableCallback","ScrollOffsetListener","typedMemo","AnimatedFlatList","createAnimatedComponent","DraggableFlatListInner","props","cellDataRef","containerRef","flatlistRef","keyToIndexRef","propsRef","animationConfigRef","activeCellOffset","activeCellSize","activeIndexAnim","containerSize","scrollOffset","scrollViewSize","spacerIndexAnim","horizontalAnim","placeholderOffset","touchTranslate","autoScrollDistance","panGestureState","isTouchActiveNative","viewableIndexMin","viewableIndexMax","disabled","reset","value","setActiveKey","dragHitSlop","scrollEnabled","activationDistance","activationDistanceProp","activeKey","layoutAnimationDisabled","setLayoutAnimationDisabled","current","enableLayoutAnimationExperimental","keyExtractor","item","index","Error","dataRef","data","dataHasChanged","map","join","setTimeout","forEach","d","i","key","set","drag","get","cellData","measurements","offset","size","onDragBegin","undefined","onContainerLayout","nativeEvent","layout","_props$onContainerLay","width","height","horizontal","call","onListContentSizeChange","w","h","_props$onContentSizeC","onContentSizeChange","onContainerTouchStart","onContainerTouchEnd","extraData","renderItem","createElement","itemKey","onRelease","_props$onRelease","onDragEnd","from","to","newData","splice","onPlaceholderIndexChange","_props$onPlaceholderI","cur","prev","hasMoved","gestureDisabled","panGesture","Pan","onBegin","evt","state","onUpdate","translation","translationX","translationY","onEnd","springTo","onTouchesDown","onTouchesUp","hitSlop","activeOffset","activeOffsetX","activeOffsetY","onScroll","_props$onScrollOffset","onScrollOffsetChange","scrollHandler","contentOffset","x","y","onViewableItemsChanged","info","_props$onViewableItem","viewableIndices","viewableItems","filter","isViewable","min","Math","max","gesture","View","style","containerStyle","ref","onLayout","renderPlaceholder","_extends","scrollEventThrottle","simultaneousHandlers","removeClippedSubviews","DraggableFlatList","flatListRef","MemoizedInner","forwardRef"],"sources":["DraggableFlatList.tsx"],"sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { ListRenderItem, FlatListProps, LayoutChangeEvent } from \"react-native\";\nimport {\n  FlatList,\n  Gesture,\n  GestureDetector,\n} from \"react-native-gesture-handler\";\nimport Animated, {\n  runOnJS,\n  useAnimatedReaction,\n  useAnimatedScrollHandler,\n  useSharedValue,\n  withSpring,\n} from \"react-native-reanimated\";\nimport CellRendererComponent from \"./CellRendererComponent\";\nimport { DEFAULT_PROPS, isWeb } from \"../constants\";\nimport PlaceholderItem from \"./PlaceholderItem\";\nimport RowItem from \"./RowItem\";\nimport { DraggableFlatListProps } from \"../types\";\nimport PropsProvider from \"../context/propsContext\";\nimport AnimatedValueProvider, {\n  useAnimatedValues,\n} from \"../context/animatedValueContext\";\nimport RefProvider, { useRefs } from \"../context/refContext\";\nimport DraggableFlatListProvider from \"../context/draggableFlatListContext\";\nimport { useAutoScroll } from \"../hooks/useAutoScroll\";\nimport { useStableCallback } from \"../hooks/useStableCallback\";\nimport ScrollOffsetListener from \"./ScrollOffsetListener\";\nimport { typedMemo } from \"../utils\";\n\ntype RNGHFlatListProps<T> = Animated.AnimateProps<\n  FlatListProps<T> & {\n    ref: React.Ref<FlatList<T>>;\n    simultaneousHandlers?: React.Ref<any> | React.Ref<any>[];\n  }\n>;\n\ntype OnViewableItemsChangedCallback<T> = Exclude<\n  FlatListProps<T>[\"onViewableItemsChanged\"],\n  undefined | null\n>;\n\nconst AnimatedFlatList = (Animated.createAnimatedComponent(\n  FlatList\n) as unknown) as <T>(props: RNGHFlatListProps<T>) => React.ReactElement;\n\nfunction DraggableFlatListInner<T>(props: DraggableFlatListProps<T>) {\n  const {\n    cellDataRef,\n    containerRef,\n    flatlistRef,\n    keyToIndexRef,\n    propsRef,\n    animationConfigRef,\n  } = useRefs<T>();\n  const {\n    activeCellOffset,\n    activeCellSize,\n    activeIndexAnim,\n    containerSize,\n    scrollOffset,\n    scrollViewSize,\n    spacerIndexAnim,\n    horizontalAnim,\n    placeholderOffset,\n    touchTranslate,\n    autoScrollDistance,\n    panGestureState,\n    isTouchActiveNative,\n    viewableIndexMin,\n    viewableIndexMax,\n    disabled,\n  } = useAnimatedValues();\n\n  const reset = useStableCallback(() => {\n    activeIndexAnim.value = -1;\n    spacerIndexAnim.value = -1;\n    touchTranslate.value = 0;\n    activeCellSize.value = -1;\n    activeCellOffset.value = -1;\n    setActiveKey(null);\n  });\n\n  const {\n    dragHitSlop = DEFAULT_PROPS.dragHitSlop,\n    scrollEnabled = DEFAULT_PROPS.scrollEnabled,\n    activationDistance: activationDistanceProp = DEFAULT_PROPS.activationDistance,\n  } = props;\n\n  let [activeKey, setActiveKey] = useState<string | null>(null);\n  const [layoutAnimationDisabled, setLayoutAnimationDisabled] = useState(\n    !propsRef.current.enableLayoutAnimationExperimental\n  );\n\n  const keyExtractor = useStableCallback((item: T, index: number) => {\n    if (!props.keyExtractor) {\n      throw new Error(\"You must provide a keyExtractor to DraggableFlatList\");\n    }\n    return props.keyExtractor(item, index);\n  });\n\n  const dataRef = useRef(props.data);\n  const dataHasChanged =\n    dataRef.current.map(keyExtractor).join(\"\") !==\n    props.data.map(keyExtractor).join(\"\");\n  dataRef.current = props.data;\n  if (dataHasChanged) {\n    // When data changes make sure `activeKey` is nulled out in the same render pass\n    activeKey = null;\n  }\n\n  useEffect(() => {\n    if (!propsRef.current.enableLayoutAnimationExperimental) return;\n    if (activeKey) {\n      setLayoutAnimationDisabled(true);\n    } else {\n      // setTimeout result of trial-and-error to determine how long to wait before\n      // re-enabling layout animations so that a drag reorder does not trigger it.\n      setTimeout(() => {\n        setLayoutAnimationDisabled(false);\n      }, 100);\n    }\n  }, [activeKey]);\n\n  useLayoutEffect(() => {\n    props.data.forEach((d, i) => {\n      const key = keyExtractor(d, i);\n      keyToIndexRef.current.set(key, i);\n    });\n  }, [props.data, keyExtractor, keyToIndexRef]);\n\n  const drag = useStableCallback((activeKey: string) => {\n    if (disabled.value) return;\n    const index = keyToIndexRef.current.get(activeKey);\n    const cellData = cellDataRef.current.get(activeKey);\n    if (cellData) {\n      activeCellOffset.value = cellData.measurements.offset;\n      activeCellSize.value = cellData.measurements.size;\n    }\n\n    const { onDragBegin } = propsRef.current;\n    if (index !== undefined) {\n      spacerIndexAnim.value = index;\n      activeIndexAnim.value = index;\n      setActiveKey(activeKey);\n      onDragBegin?.(index);\n    }\n  });\n\n  const onContainerLayout = ({\n    nativeEvent: { layout },\n  }: LayoutChangeEvent) => {\n    const { width, height } = layout;\n    containerSize.value = props.horizontal ? width : height;\n    props.onContainerLayout?.({ layout, containerRef });\n  };\n\n  const onListContentSizeChange = (w: number, h: number) => {\n    scrollViewSize.value = props.horizontal ? w : h;\n    props.onContentSizeChange?.(w, h);\n  };\n\n  const onContainerTouchStart = () => {\n    if (!disabled.value) {\n      isTouchActiveNative.value = true;\n    }\n    return false;\n  };\n\n  const onContainerTouchEnd = () => {\n    isTouchActiveNative.value = false;\n  };\n\n  const extraData = useMemo(\n    () => ({\n      activeKey,\n      extraData: props.extraData,\n    }),\n    [activeKey, props.extraData]\n  );\n\n  const renderItem: ListRenderItem<T> = useCallback(\n    ({ item, index }) => {\n      const key = keyExtractor(item, index);\n      if (index !== keyToIndexRef.current.get(key)) {\n        keyToIndexRef.current.set(key, index);\n      }\n\n      return (\n        <RowItem\n          item={item}\n          itemKey={key}\n          renderItem={props.renderItem}\n          drag={drag}\n          extraData={props.extraData}\n        />\n      );\n    },\n    [props.renderItem, props.extraData, drag, keyExtractor]\n  );\n\n  const onRelease = useStableCallback((index: number) => {\n    props.onRelease?.(index);\n  });\n\n  const onDragEnd = useStableCallback(\n    ({ from, to }: { from: number; to: number }) => {\n      const { onDragEnd, data } = props;\n\n      const newData = [...data];\n      if (from !== to) {\n        newData.splice(from, 1);\n        newData.splice(to, 0, data[from]);\n      }\n\n      onDragEnd?.({ from, to, data: newData });\n      reset();\n    }\n  );\n\n  const onPlaceholderIndexChange = useStableCallback((index: number) => {\n    props.onPlaceholderIndexChange?.(index);\n  });\n\n  // Handle case where user ends drag without moving their finger.\n  useAnimatedReaction(\n    () => {\n      return isTouchActiveNative.value;\n    },\n    (cur, prev) => {\n      if (cur !== prev && !cur) {\n        const hasMoved = !!touchTranslate.value;\n        if (!hasMoved && activeIndexAnim.value >= 0 && !disabled.value) {\n          runOnJS(onRelease)(activeIndexAnim.value);\n          runOnJS(onDragEnd)({\n            from: activeIndexAnim.value,\n            to: spacerIndexAnim.value,\n          });\n        }\n      }\n    },\n    [isTouchActiveNative, onDragEnd, onRelease]\n  );\n\n  useAnimatedReaction(\n    () => {\n      return spacerIndexAnim.value;\n    },\n    (cur, prev) => {\n      if (prev !== null && cur !== prev && cur >= 0 && prev >= 0) {\n        runOnJS(onPlaceholderIndexChange)(cur);\n      }\n    },\n    [spacerIndexAnim]\n  );\n\n  const gestureDisabled = useSharedValue(false);\n\n  const panGesture = Gesture.Pan()\n    .onBegin((evt) => {\n      gestureDisabled.value = disabled.value;\n      if (gestureDisabled.value) return;\n      panGestureState.value = evt.state;\n    })\n    .onUpdate((evt) => {\n      if (gestureDisabled.value) return;\n      panGestureState.value = evt.state;\n      const translation = horizontalAnim.value\n        ? evt.translationX\n        : evt.translationY;\n      touchTranslate.value = translation;\n    })\n    .onEnd((evt) => {\n      if (gestureDisabled.value) return;\n      // Set touch val to current translate val\n      isTouchActiveNative.value = false;\n      const translation = horizontalAnim.value\n        ? evt.translationX\n        : evt.translationY;\n\n      touchTranslate.value = translation + autoScrollDistance.value;\n      panGestureState.value = evt.state;\n\n      // Only call onDragEnd if actually dragging a cell\n      if (activeIndexAnim.value === -1 || disabled.value) {\n        touchTranslate.value = 0\n        return \n      } \n      \n      disabled.value = true;\n      runOnJS(onRelease)(activeIndexAnim.value);\n      const springTo = placeholderOffset.value - activeCellOffset.value;\n      touchTranslate.value = withSpring(\n        springTo,\n        animationConfigRef.value,\n        () => {\n          runOnJS(onDragEnd)({\n            from: activeIndexAnim.value,\n            to: spacerIndexAnim.value,\n          });\n          disabled.value = false;\n        }\n      );\n    })\n    .onTouchesDown(() => {\n      runOnJS(onContainerTouchStart)();\n    })\n    .onTouchesUp(() => {\n      // Turning this into a worklet causes timing issues. We want it to run\n      // just after the finger lifts.\n      runOnJS(onContainerTouchEnd)();\n    });\n\n  if (dragHitSlop) panGesture.hitSlop(dragHitSlop);\n  if (activationDistanceProp) {\n    const activeOffset = [-activationDistanceProp, activationDistanceProp];\n    if (props.horizontal) {\n      panGesture.activeOffsetX(activeOffset);\n    } else {\n      panGesture.activeOffsetY(activeOffset);\n    }\n  }\n\n  const onScroll = useStableCallback((scrollOffset: number) => {\n    props.onScrollOffsetChange?.(scrollOffset);\n  });\n\n  const scrollHandler = useAnimatedScrollHandler(\n    {\n      onScroll: (evt) => {\n        scrollOffset.value = horizontalAnim.value\n          ? evt.contentOffset.x\n          : evt.contentOffset.y;\n        runOnJS(onScroll)(scrollOffset.value);\n      },\n    },\n    [horizontalAnim]\n  );\n\n  useAutoScroll();\n\n  const onViewableItemsChanged = useStableCallback<\n    OnViewableItemsChangedCallback<T>\n  >((info) => {\n    const viewableIndices = info.viewableItems\n      .filter((item) => item.isViewable)\n      .map((item) => item.index)\n      .filter((index): index is number => typeof index === \"number\");\n\n    const min = Math.min(...viewableIndices);\n    const max = Math.max(...viewableIndices);\n    viewableIndexMin.value = min;\n    viewableIndexMax.value = max;\n    props.onViewableItemsChanged?.(info);\n  });\n\n  return (\n    <DraggableFlatListProvider\n      activeKey={activeKey}\n      keyExtractor={keyExtractor}\n      horizontal={!!props.horizontal}\n      layoutAnimationDisabled={layoutAnimationDisabled}\n    >\n      <GestureDetector gesture={panGesture}>\n        <Animated.View\n          style={props.containerStyle}\n          ref={containerRef}\n          onLayout={onContainerLayout}\n        >\n          {props.renderPlaceholder && (\n            <PlaceholderItem renderPlaceholder={props.renderPlaceholder} />\n          )}\n          <AnimatedFlatList\n            {...props}\n            data={props.data}\n            onViewableItemsChanged={onViewableItemsChanged}\n            CellRendererComponent={CellRendererComponent}\n            ref={flatlistRef}\n            onContentSizeChange={onListContentSizeChange}\n            scrollEnabled={!activeKey && scrollEnabled}\n            renderItem={renderItem}\n            extraData={extraData}\n            keyExtractor={keyExtractor}\n            onScroll={scrollHandler}\n            scrollEventThrottle={16}\n            simultaneousHandlers={props.simultaneousHandlers}\n            removeClippedSubviews={false}\n          />\n          {!!props.onScrollOffsetChange && (\n            <ScrollOffsetListener\n              onScrollOffsetChange={props.onScrollOffsetChange}\n              scrollOffset={scrollOffset}\n            />\n          )}\n        </Animated.View>\n      </GestureDetector>\n    </DraggableFlatListProvider>\n  );\n}\n\nfunction DraggableFlatList<T>(\n  props: DraggableFlatListProps<T>,\n  ref?: React.ForwardedRef<FlatList<T>> | null\n) {\n  return (\n    <PropsProvider {...props}>\n      <AnimatedValueProvider>\n        <RefProvider flatListRef={ref}>\n          <MemoizedInner {...props} />\n        </RefProvider>\n      </AnimatedValueProvider>\n    </PropsProvider>\n  );\n}\n\nconst MemoizedInner = typedMemo(DraggableFlatListInner);\n\n// Generic forwarded ref type assertion taken from:\n// https://fettblog.eu/typescript-react-generic-forward-refs/#option-1%3A-type-assertion\nexport default React.forwardRef(DraggableFlatList) as <T>(\n  props: DraggableFlatListProps<T> & { ref?: React.ForwardedRef<FlatList<T>> }\n) => ReturnType<typeof DraggableFlatList>;\n"],"mappings":"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","ignoreList":[]}