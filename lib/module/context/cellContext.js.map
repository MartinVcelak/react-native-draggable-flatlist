{"version":3,"names":["React","useContext","useMemo","typedMemo","CellContext","createContext","undefined","CellProvider","isActive","children","value","createElement","Provider","useIsActive","Error"],"sources":["cellContext.tsx"],"sourcesContent":["import React, { useContext, useMemo } from \"react\";\nimport { typedMemo } from \"../utils\";\n\ntype CellContextValue = {\n  isActive: boolean;\n};\n\nconst CellContext = React.createContext<CellContextValue | undefined>(\n  undefined\n);\n\ntype Props = {\n  isActive: boolean;\n  children: React.ReactNode;\n};\n\nexport function CellProvider({ isActive, children }: Props) {\n  const value = useMemo(\n    () => ({\n      isActive,\n    }),\n    [isActive]\n  );\n  return <CellContext.Provider value={value}>{children}</CellContext.Provider>;\n}\n\nexport default typedMemo(CellProvider);\n\nexport function useIsActive() {\n  const value = useContext(CellContext);\n  if (!value) {\n    throw new Error(\"useIsActive must be called from within CellProvider!\");\n  }\n  return value.isActive;\n}\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,UAAU;AAMpC,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAa,CACrCC,SACF,CAAC;AAOD,OAAO,SAASC,YAAYA,CAAC;EAAEC,QAAQ;EAAEC;AAAgB,CAAC,EAAE;EAC1D,MAAMC,KAAK,GAAGR,OAAO,CACnB,OAAO;IACLM;EACF,CAAC,CAAC,EACF,CAACA,QAAQ,CACX,CAAC;EACD,oBAAOR,KAAA,CAAAW,aAAA,CAACP,WAAW,CAACQ,QAAQ;IAACF,KAAK,EAAEA;EAAM,GAAED,QAA+B,CAAC;AAC9E;AAEA,eAAeN,SAAS,CAACI,YAAY,CAAC;AAEtC,OAAO,SAASM,WAAWA,CAAA,EAAG;EAC5B,MAAMH,KAAK,GAAGT,UAAU,CAACG,WAAW,CAAC;EACrC,IAAI,CAACM,KAAK,EAAE;IACV,MAAM,IAAII,KAAK,CAAC,sDAAsD,CAAC;EACzE;EACA,OAAOJ,KAAK,CAACF,QAAQ;AACvB","ignoreList":[]}