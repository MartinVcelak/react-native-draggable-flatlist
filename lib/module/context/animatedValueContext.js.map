{"version":3,"names":["React","useMemo","useEffect","useCallback","useContext","useAnimatedReaction","useDerivedValue","useSharedValue","State","GestureState","useProps","AnimatedValueContext","createContext","undefined","AnimatedValueProvider","children","value","useSetupAnimatedValues","createElement","Provider","useAnimatedValues","Error","props","DEFAULT_VAL","containerSize","scrollViewSize","panGestureState","UNDETERMINED","touchTranslate","isTouchActiveNative","hasMoved","disabled","horizontalAnim","horizontal","activeIndexAnim","spacerIndexAnim","activeCellSize","activeCellOffset","scrollOffset","scrollInit","viewableIndexMin","viewableIndexMax","outerScrollOffset","outerScrollInit","cur","prev","placeholderOffset","isDraggingCell","autoScrollDistance","innerScrollDiff","outerScrollDiff","scrollDiff","touchPositionDiff","extraTranslate","touchPositionDiffConstrained","containerMinusActiveCell","offsetRelativeToScrollTop","constrained","Math","min","max","maxTranslateNegative","maxTranslatePositive","constrainedBase","dragItemOverflow","hoverAnim","hoverOffset","isHovering","resetTouchedCell","_props$onAnimValInit","onAnimValInit","call"],"sources":["animatedValueContext.tsx"],"sourcesContent":["import React, { useMemo, useEffect, useCallback, useContext } from \"react\";\nimport {\n  useAnimatedReaction,\n  useDerivedValue,\n  useSharedValue,\n} from \"react-native-reanimated\";\nimport { State as GestureState } from \"react-native-gesture-handler\";\nimport { useProps } from \"./propsContext\";\n\nconst AnimatedValueContext = React.createContext<\n  ReturnType<typeof useSetupAnimatedValues> | undefined\n>(undefined);\n\nexport default function AnimatedValueProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const value = useSetupAnimatedValues();\n  return (\n    <AnimatedValueContext.Provider value={value}>\n      {children}\n    </AnimatedValueContext.Provider>\n  );\n}\n\nexport function useAnimatedValues() {\n  const value = useContext(AnimatedValueContext);\n  if (!value) {\n    throw new Error(\n      \"useAnimatedValues must be called from within AnimatedValueProvider!\"\n    );\n  }\n  return value;\n}\n\nfunction useSetupAnimatedValues<T>() {\n  const props = useProps<T>();\n\n  const DEFAULT_VAL = useSharedValue(0);\n\n  const containerSize = useSharedValue(0);\n  const scrollViewSize = useSharedValue(0);\n\n  const panGestureState = useSharedValue<GestureState>(\n    GestureState.UNDETERMINED\n  );\n  const touchTranslate = useSharedValue(0);\n\n  const isTouchActiveNative = useSharedValue(false);\n\n  const hasMoved = useSharedValue(0);\n  const disabled = useSharedValue(false);\n\n  const horizontalAnim = useSharedValue(!!props.horizontal);\n\n  const activeIndexAnim = useSharedValue(-1); // Index of hovering cell\n  const spacerIndexAnim = useSharedValue(-1); // Index of hovered-over cell\n\n  const activeCellSize = useSharedValue(0); // Height or width of acctive cell\n  const activeCellOffset = useSharedValue(0); // Distance between active cell and edge of container\n\n  const scrollOffset = useSharedValue(0);\n  const scrollInit = useSharedValue(0);\n\n  const viewableIndexMin = useSharedValue(0);\n  const viewableIndexMax = useSharedValue(0);\n\n  // If list is nested there may be an outer scrollview\n  const outerScrollOffset = props.outerScrollOffset || DEFAULT_VAL;\n  const outerScrollInit = useSharedValue(0);\n\n  useAnimatedReaction(\n    () => {\n      return activeIndexAnim.value;\n    },\n    (cur, prev) => {\n      if (cur !== prev && cur >= 0) {\n        scrollInit.value = scrollOffset.value;\n        outerScrollInit.value = outerScrollOffset.value;\n      }\n    },\n    [outerScrollOffset]\n  );\n\n  const placeholderOffset = useSharedValue(0);\n\n  const isDraggingCell = useDerivedValue(() => {\n    return isTouchActiveNative.value && activeIndexAnim.value >= 0;\n  }, []);\n\n  const autoScrollDistance = useDerivedValue(() => {\n    if (!isDraggingCell.value) return 0;\n    const innerScrollDiff = scrollOffset.value - scrollInit.value;\n    // If list is nested there may be an outer scroll diff\n    const outerScrollDiff = outerScrollOffset.value - outerScrollInit.value;\n    const scrollDiff = innerScrollDiff + outerScrollDiff;\n    return scrollDiff;\n  }, []);\n\n  const touchPositionDiff = useDerivedValue(() => {\n    const extraTranslate = isTouchActiveNative.value\n      ? autoScrollDistance.value\n      : 0;\n    return touchTranslate.value + extraTranslate;\n  }, []);\n\n  const touchPositionDiffConstrained = useDerivedValue(() => {\n    const containerMinusActiveCell =\n      containerSize.value - activeCellSize.value + scrollOffset.value;\n\n    const offsetRelativeToScrollTop =\n      touchPositionDiff.value + activeCellOffset.value;\n    const constrained = Math.min(\n      containerMinusActiveCell,\n      Math.max(scrollOffset.value, offsetRelativeToScrollTop)\n    );\n\n    const maxTranslateNegative = -activeCellOffset.value;\n    const maxTranslatePositive =\n      scrollViewSize.value - (activeCellOffset.value + activeCellSize.value);\n\n    // Only constrain the touch position while the finger is on the screen. This allows the active cell\n    // to snap above/below the fold once let go, if the drag ends at the top/bottom of the screen.\n    const constrainedBase = isTouchActiveNative.value\n      ? constrained - activeCellOffset.value\n      : touchPositionDiff.value;\n\n    // Make sure item is constrained to the boundaries of the scrollview\n    return Math.min(\n      Math.max(constrainedBase, maxTranslateNegative),\n      maxTranslatePositive\n    );\n  }, []);\n\n  const dragItemOverflow = props.dragItemOverflow;\n  const hoverAnim = useDerivedValue(() => {\n    if (activeIndexAnim.value < 0) return 0;\n    return dragItemOverflow\n      ? touchPositionDiff.value\n      : touchPositionDiffConstrained.value;\n  }, []);\n\n  const hoverOffset = useDerivedValue(() => {\n    return hoverAnim.value + activeCellOffset.value;\n  }, [hoverAnim, activeCellOffset]);\n\n  useDerivedValue(() => {\n    // Reset spacer index when we stop hovering\n    const isHovering = activeIndexAnim.value >= 0;\n    if (!isHovering && spacerIndexAnim.value >= 0) {\n      spacerIndexAnim.value = -1;\n    }\n  }, []);\n\n  // Note: this could use a refactor as it combines touch state + cell animation\n  const resetTouchedCell = useCallback(() => {\n    activeCellOffset.value = 0;\n    hasMoved.value = 0;\n  }, []);\n\n  const value = useMemo(\n    () => ({\n      activeCellOffset,\n      activeCellSize,\n      activeIndexAnim,\n      containerSize,\n      disabled,\n      horizontalAnim,\n      hoverAnim,\n      hoverOffset,\n      isDraggingCell,\n      isTouchActiveNative,\n      panGestureState,\n      placeholderOffset,\n      resetTouchedCell,\n      scrollOffset,\n      scrollViewSize,\n      spacerIndexAnim,\n      touchPositionDiff,\n      touchTranslate,\n      autoScrollDistance,\n      viewableIndexMin,\n      viewableIndexMax,\n    }),\n    [\n      activeCellOffset,\n      activeCellSize,\n      activeIndexAnim,\n      containerSize,\n      disabled,\n      horizontalAnim,\n      hoverAnim,\n      hoverOffset,\n      isDraggingCell,\n      isTouchActiveNative,\n      panGestureState,\n      placeholderOffset,\n      resetTouchedCell,\n      scrollOffset,\n      scrollViewSize,\n      spacerIndexAnim,\n      touchPositionDiff,\n      touchTranslate,\n      autoScrollDistance,\n      viewableIndexMin,\n      viewableIndexMax,\n    ]\n  );\n\n  useEffect(() => {\n    props.onAnimValInit?.(value);\n  }, [value]);\n\n  return value;\n}\n"],"mappings":"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","ignoreList":[]}